/*
 * Ncdaf_EventExposure
 *
 * CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// CdafEventNotification - Data within a CADF Event Notification request
type CdafEventNotification struct {

	NotifyCorrelationId string `json:"notifyCorrelationId,omitempty"`

	SubsChangeNotifyCorrelationId string `json:"subsChangeNotifyCorrelationId,omitempty"`

	ReportList []CdafEventReport `json:"reportList,omitempty"`

	EventSubsSyncInfo CdafEventSubsSyncInfo `json:"eventSubsSyncInfo,omitempty"`
}

// AssertCdafEventNotificationRequired checks if the required fields are not zero-ed
func AssertCdafEventNotificationRequired(obj CdafEventNotification) error {
	for _, el := range obj.ReportList {
		if err := AssertCdafEventReportRequired(el); err != nil {
			return err
		}
	}
	if err := AssertCdafEventSubsSyncInfoRequired(obj.EventSubsSyncInfo); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCdafEventNotificationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CdafEventNotification (e.g. [][]CdafEventNotification), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCdafEventNotificationRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCdafEventNotification, ok := obj.(CdafEventNotification)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCdafEventNotificationRequired(aCdafEventNotification)
	})
}
