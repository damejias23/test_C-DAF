/*
 * Ncdaf_EventExposure
 *
 * CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// CdafUpdateEventOptionItem - Document describing the modifications to CDAF event subscription options
type CdafUpdateEventOptionItem struct {

	Op string `json:"op"`

	Path string `json:"path"`

	// string with format 'date-time' as defined in OpenAPI.
	Value time.Time `json:"value"`

	NotifFlag NotificationFlag `json:"notifFlag,omitempty"`
}

// AssertCdafUpdateEventOptionItemRequired checks if the required fields are not zero-ed
func AssertCdafUpdateEventOptionItemRequired(obj CdafUpdateEventOptionItem) error {
	elements := map[string]interface{}{
		"op": obj.Op,
		"path": obj.Path,
		"value": obj.Value,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNotificationFlagRequired(obj.NotifFlag); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCdafUpdateEventOptionItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CdafUpdateEventOptionItem (e.g. [][]CdafUpdateEventOptionItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCdafUpdateEventOptionItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCdafUpdateEventOptionItem, ok := obj.(CdafUpdateEventOptionItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCdafUpdateEventOptionItemRequired(aCdafUpdateEventOptionItem)
	})
}
