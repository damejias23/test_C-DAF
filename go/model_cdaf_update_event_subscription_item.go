/*
 * Ncdaf_EventExposure
 *
 * CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// CdafUpdateEventSubscriptionItem - Document describing the modification(s) to an CDAF Event Subscription
type CdafUpdateEventSubscriptionItem struct {

	Op string `json:"op"`

	Path string `json:"path,omitempty"`

	Value CdafEvent `json:"value,omitempty"`
}

// AssertCdafUpdateEventSubscriptionItemRequired checks if the required fields are not zero-ed
func AssertCdafUpdateEventSubscriptionItemRequired(obj CdafUpdateEventSubscriptionItem) error {
	elements := map[string]interface{}{
		"op": obj.Op,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCdafEventRequired(obj.Value); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCdafUpdateEventSubscriptionItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CdafUpdateEventSubscriptionItem (e.g. [][]CdafUpdateEventSubscriptionItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCdafUpdateEventSubscriptionItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCdafUpdateEventSubscriptionItem, ok := obj.(CdafUpdateEventSubscriptionItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCdafUpdateEventSubscriptionItemRequired(aCdafUpdateEventSubscriptionItem)
	})
}
