// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Ncdaf_EventExposure
 *
 * CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.3
 */

package openapi


import (
	"time"
)



// CdafEvent - Describes an event to be subscribed
type CdafEvent struct {

	Type CdafEventType `json:"type"`

	ImmediateFlag bool `json:"immediateFlag,omitempty"`

	AreaList []CdafEventArea `json:"areaList,omitempty"`

	MaxReports int32 `json:"maxReports,omitempty"`

	// A map(list of key-value pairs) where praId serves as key.
	PresenceInfoList map[string]PresenceInfo `json:"presenceInfoList,omitempty"`

	// indicating a time in seconds.
	MaxResponseTime int32 `json:"maxResponseTime,omitempty"`

	// indicating a time in seconds.
	MinInterval int32 `json:"minInterval,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	NextReport time.Time `json:"nextReport,omitempty"`

	IdleStatusInd bool `json:"idleStatusInd,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	NextPeriodicReportTime time.Time `json:"nextPeriodicReportTime,omitempty"`
}

// AssertCdafEventRequired checks if the required fields are not zero-ed
func AssertCdafEventRequired(obj CdafEvent) error {
	elements := map[string]interface{}{
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCdafEventTypeRequired(obj.Type); err != nil {
		return err
	}
	for _, el := range obj.AreaList {
		if err := AssertCdafEventAreaRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertCdafEventConstraints checks if the values respects the defined constraints
func AssertCdafEventConstraints(obj CdafEvent) error {
	return nil
}
